// generated by xUnit Mon Jun 10 2013 20:25:40 GMT+0100 (GMT Summer Time)
// jasmine unit test for grunt-parser.js
/*global describe, it, expect, parse */
define(function (require, exports, module) {
    'use strict';
    var testapi = require('./GruntParser.js');
    describe("test parse(text)", function () {
        var text = 
            "module.exports = function (grunt) {\r\n" +
            "    'use strict';\r\n" +
            "\r\n" +
            "    grunt.initConfig({\r\n" +
            "        typescript: {\r\n" +
            "            smash: {\r\n" +
            "                src: ['app/smash.ts'],\r\n" +
            "                dest: 'public/js/smash.js',\r\n" +
            "                options: {\r\n" +
            "                    target: 'ES5'\r\n" +
            "                }\r\n" +
            "            },\r\n" +
            "            app: {\r\n" +
            "              src: ['app.ts'],\r\n" +
            "              dest: 'app.js',\r\n" +
            "              options: {\r\n" +
            "                target: 'ES5'\r\n" +
            "              }\r\n" +
            "            }\r\n" +
            "        },\r\n" +
            "\r\n" +
            "        uglify: {\r\n" +
            "            smash: {\r\n" +
            "                files: {\r\n" +
            "                    'public/js/smash.min.js': ['public/js/smash.js']\r\n" +
            "                }\r\n" +
            "            }\r\n" +
            "        },\r\n" +
            "\r\n" +
            "        watch: {\r\n" +
            "            smash: {\r\n" +
            "                files: ['app/*.ts','app/**/*.ts'],\r\n" +
            "                tasks: ['typescript:smash'],\r\n" +
            "                options: {\r\n" +
            "                  nospawn: true\r\n" +
            "                }\r\n" +
            "            },\r\n" +
            "            app: {\r\n" +
            "              files: ['app.ts'],\r\n" +
            "              tasks: ['typescript:app'],\r\n" +
            "              options: {\r\n" +
            "                nospawn: true\r\n" +
            "              }\r\n" +
            "            }\r\n" +
            "        }\r\n" +
            "    });\r\n" +
            "\r\n" +
            "    grunt.loadNpmTasks('grunt-contrib-uglify');\r\n" +
            "    grunt.loadNpmTasks('grunt-typescript');\r\n" +
            "    grunt.loadNpmTasks('grunt-contrib-watch');\r\n" +
            "    grunt.registerTask('custom', ['typescript', 'uglify']);\r\n" +
            "    grunt.registerTask('default', ['typescript', 'uglify']);\r\n" +
            "}";
        var targets = testapi.parse(text);
        it("Should return an array", function () {
            expect(targets.length).toBeDefined();
        });
        it("Should return top-level tasks", function () {
            expect(targets).toContain("typescript");
            expect(targets).toContain("uglify");
            expect(targets).toContain("watch");
            expect(targets).toContain("custom");
        });
        it("Should return sub-tasks with colon", function () {
            expect(targets).toContain("typescript:smash");
            expect(targets).toContain("typescript:app");
            expect(targets).toContain("uglify:smash");
            expect(targets).toContain("watch:smash");
            expect(targets).toContain("watch:app");
        });
    });
});
